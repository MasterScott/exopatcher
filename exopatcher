#!/bin/bash
set -e

function error { printf "\e[0;31m==> \e[1;31mError:\e[m %s\n" "$1" >&2; exit 1; }
function log { printf "\e[0;3%im==> \e[1;39m%sâ€¦\e[m\n" "$1" "$2"; }

if [[ $1 = "--help" ]] || [[ $1 = "-h" ]]; then
	cat << USAGE
Usage: $0 [in.ipa] [out.ipa]
       in.ipa:  (optional) The location of the input file
                If you do not provide this, a file picker
                will be presented to choose an ipa file.
       out.ipa: (optional) The location to output the patched
                ipa file. If you do not provide this, in.ipa
                will be overwritten with the patched file.
USAGE
exit 0
fi

ipa="$1"
if [[ -z $ipa ]]; then
	ipa=$(osascript -e "POSIX path of (choose file of type {\"ipa\"})")
elif [[ ! -r $ipa ]]; then
	error "$ipa: No such file or directory"
fi

log 1 "Unpacking $(basename "$ipa")"
optool="$(cd "$(dirname "$0")" && pwd)/optool"
rm -rf "$TMPDIR/Payload"
unzip -oq "$ipa" "Payload/*" -d "$TMPDIR"

app=$(basename "$TMPDIR"/Payload/*.app)
appdir="$TMPDIR/Payload/$app"
binary="$appdir/$(/usr/libexec/PlistBuddy -c "Print :CFBundleExecutable" "$appdir/Info.plist")"
exo_loader="$appdir/ExoLoader.dylib"
if [[ ! -r $exo_loader ]]; then
	error "$(basename "$ipa") has already been patched"
fi

otool -L "$exo_loader" | grep -o "@executable_path/.*\.dylib" | sort -u | while read -r payload; do
	log 2 "Injecting $(basename "$payload")"
	$optool install -c load -p "$payload" -t "$binary" > /dev/null
done

log 3 "Uninstalling ExoLoader.dylib"
$optool uninstall -p "@executable_path/ExoLoader.dylib" -t "$binary" > /dev/null
rm -f "$exo_loader"

log 4 "Repacking $app"
(cd "$TMPDIR"; zip -9qry "app.ipa" "Payload")
mv "$TMPDIR/app.ipa" "${2:-$ipa}"
